/*
Deployment script for DWPubsSales

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "DWPubsSales"
:setvar DefaultFilePrefix "DWPubsSales"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[DimAuthors]...';


GO
CREATE TABLE [dbo].[DimAuthors] (
    [AuthorKey]   INT            IDENTITY (1, 1) NOT NULL,
    [AuthorId]    NCHAR (11)     NOT NULL,
    [AuthorName]  NVARCHAR (100) NOT NULL,
    [AuthorState] NCHAR (2)      NOT NULL,
    PRIMARY KEY CLUSTERED ([AuthorKey] ASC)
);


GO
PRINT N'Creating [dbo].[DimDates]...';


GO
CREATE TABLE [dbo].[DimDates] (
    [DateKey]     INT           IDENTITY (1, 1) NOT NULL,
    [Date]        DATETIME      NOT NULL,
    [DateName]    NVARCHAR (50) NULL,
    [Month]       INT           NOT NULL,
    [MonthName]   NVARCHAR (50) NOT NULL,
    [Quarter]     INT           NOT NULL,
    [QuarterName] NVARCHAR (50) NOT NULL,
    [Year]        INT           NOT NULL,
    [YearName]    NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([DateKey] ASC)
);


GO
PRINT N'Creating [dbo].[DimPublishers]...';


GO
CREATE TABLE [dbo].[DimPublishers] (
    [PublisherKey]  INT           IDENTITY (1, 1) NOT NULL,
    [PublisherId]   NCHAR (4)     NOT NULL,
    [PublisherName] NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([PublisherKey] ASC)
);


GO
PRINT N'Creating [dbo].[DimStores]...';


GO
CREATE TABLE [dbo].[DimStores] (
    [StoreKey]  INT           IDENTITY (1, 1) NOT NULL,
    [StoreId]   NCHAR (4)     NOT NULL,
    [StoreName] NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([StoreKey] ASC)
);


GO
PRINT N'Creating [dbo].[DimTitles]...';


GO
CREATE TABLE [dbo].[DimTitles] (
    [TitleKey]         INT             IDENTITY (1, 1) NOT NULL,
    [TitleId]          NVARCHAR (6)    NOT NULL,
    [TitleName]        NVARCHAR (100)  NOT NULL,
    [TitleType]        NVARCHAR (50)   NOT NULL,
    [PublisherKey]     INT             NOT NULL,
    [TitlePrice]       DECIMAL (18, 4) NOT NULL,
    [PublishedDateKey] INT             NOT NULL,
    PRIMARY KEY CLUSTERED ([TitleKey] ASC)
);


GO
PRINT N'Creating [dbo].[FactSales]...';


GO
CREATE TABLE [dbo].[FactSales] (
    [OrderNumber]   NVARCHAR (50) NOT NULL,
    [OrderDateKey]  INT           NOT NULL,
    [TitleKey]      INT           NOT NULL,
    [StoreKey]      INT           NOT NULL,
    [SalesQuantity] INT           NOT NULL,
    CONSTRAINT [PK_FactSales] PRIMARY KEY CLUSTERED ([OrderNumber] ASC, [OrderDateKey] ASC, [TitleKey] ASC, [StoreKey] ASC)
);


GO
PRINT N'Creating [dbo].[FactTitlesAuthors]...';


GO
CREATE TABLE [dbo].[FactTitlesAuthors] (
    [TitleKey]    INT NOT NULL,
    [AuthorKey]   INT NOT NULL,
    [AuthorOrder] INT NOT NULL,
    CONSTRAINT [PK_FactTitlesAuthors] PRIMARY KEY CLUSTERED ([TitleKey] ASC, [AuthorKey] ASC)
);


GO
PRINT N'Creating [dbo].[FK_DimTitles_DimPublishers]...';


GO
ALTER TABLE [dbo].[DimTitles]
    ADD CONSTRAINT [FK_DimTitles_DimPublishers] FOREIGN KEY ([PublisherKey]) REFERENCES [dbo].[DimPublishers] ([PublisherKey]);


GO
PRINT N'Creating [dbo].[FK_DimTitles_DimDates]...';


GO
ALTER TABLE [dbo].[DimTitles]
    ADD CONSTRAINT [FK_DimTitles_DimDates] FOREIGN KEY ([PublishedDateKey]) REFERENCES [dbo].[DimDates] ([DateKey]);


GO
PRINT N'Creating [dbo].[FK_FactSales_DimStores]...';


GO
ALTER TABLE [dbo].[FactSales]
    ADD CONSTRAINT [FK_FactSales_DimStores] FOREIGN KEY ([StoreKey]) REFERENCES [dbo].[DimStores] ([StoreKey]);


GO
PRINT N'Creating [dbo].[FK_FactSales_DimTitles]...';


GO
ALTER TABLE [dbo].[FactSales]
    ADD CONSTRAINT [FK_FactSales_DimTitles] FOREIGN KEY ([TitleKey]) REFERENCES [dbo].[DimTitles] ([TitleKey]);


GO
PRINT N'Creating [dbo].[FK_FactSales_DimDates]...';


GO
ALTER TABLE [dbo].[FactSales]
    ADD CONSTRAINT [FK_FactSales_DimDates] FOREIGN KEY ([OrderDateKey]) REFERENCES [dbo].[DimDates] ([DateKey]);


GO
PRINT N'Creating [dbo].[FK_FactTitlesAuthors_DimTitles]...';


GO
ALTER TABLE [dbo].[FactTitlesAuthors]
    ADD CONSTRAINT [FK_FactTitlesAuthors_DimTitles] FOREIGN KEY ([TitleKey]) REFERENCES [dbo].[DimTitles] ([TitleKey]);


GO
PRINT N'Creating [dbo].[FK_FactTitlesAuthors_DimAuthors]...';


GO
ALTER TABLE [dbo].[FactTitlesAuthors]
    ADD CONSTRAINT [FK_FactTitlesAuthors_DimAuthors] FOREIGN KEY ([AuthorKey]) REFERENCES [dbo].[DimAuthors] ([AuthorKey]);


GO
-- Since the date table has no associated source table we can fill the data
-- using a SQL script or wait until the ETL process. Either way, here is the 
-- code to use.

-- Create variables to hold the start and end date
DECLARE @StartDate datetime = '01/01/1990'
DECLARE @EndDate datetime = '01/01/1995' 

-- Use a while loop to add dates to the table
DECLARE @DateInProcess datetime
SET @DateInProcess = @StartDate

WHILE @DateInProcess <= @EndDate
 BEGIN
 -- Add a row into the date dimension table for this date
 INSERT INTO DimDates 
 ( [Date], [DateName], [Month], [MonthName], [Quarter], [QuarterName], [Year], [YearName] )
 VALUES ( 
  @DateInProcess -- [Date]
  , DateName( weekday, @DateInProcess )  -- [DateName]  
  , Month( @DateInProcess ) -- [Month]   
  , DateName( month, @DateInProcess ) -- [MonthName]
  , DateName( quarter, @DateInProcess ) -- [Quarter]
  , 'Q' + DateName( quarter, @DateInProcess ) + ' - ' + Cast( Year(@DateInProcess) as nVarchar(50) ) -- [QuarterName] 
  , Year( @DateInProcess )
  , Cast( Year(@DateInProcess ) as nVarchar(50) ) -- [Year] 
  )  
 -- Add a day and loop again
 SET @DateInProcess = DateAdd(d, 1, @DateInProcess)
 END
GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
